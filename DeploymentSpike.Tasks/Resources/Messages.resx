<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationPoolRecycled" xml:space="preserve">
    <value>The application pool is being recycled: {0}</value>
  </data>
  <data name="Arguments" xml:space="preserve">
    <value>Arguments:</value>
  </data>
  <data name="BackupofDatabase" xml:space="preserve">
    <value>Backup of Database.</value>
  </data>
  <data name="DatabaseBackup" xml:space="preserve">
    <value>Database backup -</value>
  </data>
  <data name="DestinationSourceCountsDifferent" xml:space="preserve">
    <value>The destination folder count does not equal the source folder count.</value>
  </data>
  <data name="EndingBackup" xml:space="preserve">
    <value>Ending backup</value>
  </data>
  <data name="ExecutingItem" xml:space="preserve">
    <value>Executing Item:</value>
  </data>
  <data name="ExecutionFlagDiagnostic" xml:space="preserve">
    <value>Halting execution of task after setting were validated due to execution flag.</value>
  </data>
  <data name="ExtractFromZip" xml:space="preserve">
    <value>Extracting from zip:</value>
  </data>
  <data name="ExtractionCompleted" xml:space="preserve">
    <value>Extraction of files from zip completed. </value>
  </data>
  <data name="ExtractionStarted" xml:space="preserve">
    <value>Extraction of files from zip starting. </value>
  </data>
  <data name="FileCopiedFrom" xml:space="preserve">
    <value>File copied from:</value>
  </data>
  <data name="FileDeleted" xml:space="preserve">
    <value>File Deleted:</value>
  </data>
  <data name="FileScanCompletedMatches" xml:space="preserve">
    <value>Scan of file completed with {0} matches found.</value>
  </data>
  <data name="FileScanCompletedNoMatches" xml:space="preserve">
    <value>Scan of file completed with no matches found.</value>
  </data>
  <data name="FilesNotFoundinSpecifiedFolder" xml:space="preserve">
    <value>Searched folder: {0} for files with extension: {1} and did not find any.</value>
  </data>
  <data name="FolderCreated" xml:space="preserve">
    <value>Folder created:</value>
  </data>
  <data name="FolderDeleted" xml:space="preserve">
    <value>Folder Deleted:</value>
  </data>
  <data name="MatchFound" xml:space="preserve">
    <value>Match found on line {0} {1}</value>
  </data>
  <data name="MissingBackupFile" xml:space="preserve">
    <value>The backup file was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingConnectionStringSetting" xml:space="preserve">
    <value>The connection string was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingDatabaseSetting" xml:space="preserve">
    <value>The database name was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingDestinationFolder" xml:space="preserve">
    <value>The destination folder was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingExecutingArguments" xml:space="preserve">
    <value>The executing arguments entry is not present.</value>
  </data>
  <data name="MissingExecutingExtension" xml:space="preserve">
    <value>The executing file extension entry is not present.</value>
  </data>
  <data name="MissingExecutingFileName" xml:space="preserve">
    <value>The executing file name entry is not present.</value>
  </data>
  <data name="MissingExecutingFolder" xml:space="preserve">
    <value>The executing folder name entry is not present.</value>
  </data>
  <data name="MissingFile" xml:space="preserve">
    <value>The file was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingIisPages" xml:space="preserve">
    <value>The iis pages entry is not present.</value>
  </data>
  <data name="MissingIisServerName" xml:space="preserve">
    <value>The iis server entry is not present.</value>
  </data>
  <data name="MissingIisSites" xml:space="preserve">
    <value>The iis sites entry is not present.</value>
  </data>
  <data name="MissingPurgeFolder" xml:space="preserve">
    <value>The purge folder was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingRegularExpression" xml:space="preserve">
    <value>The regular expression was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingSourceFolder" xml:space="preserve">
    <value>The source folder was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="MissingSourceZipFile" xml:space="preserve">
    <value>The source zip file was not in the settings.  This is a required setting for the task to run.</value>
  </data>
  <data name="OpenServerConnection" xml:space="preserve">
    <value>Opening Connection to Server</value>
  </data>
  <data name="ScanningFile" xml:space="preserve">
    <value>Scanning file: {0} with regular expression {1}</value>
  </data>
  <data name="ServerNamePagesCountsDifferent" xml:space="preserve">
    <value>The server name count does not equal the page count.</value>
  </data>
  <data name="ServerNameSitesCountsDifferent" xml:space="preserve">
    <value>The server name count does not equal the site count.</value>
  </data>
  <data name="SpecifiedFileFound" xml:space="preserve">
    <value>Specified file in configuration is found:</value>
  </data>
  <data name="SpecifiedFileNotFound" xml:space="preserve">
    <value>Specified file in configuration is not found:</value>
  </data>
  <data name="SpecifiedFolderFound" xml:space="preserve">
    <value>Specified folder in configuration is found:</value>
  </data>
  <data name="SpecifiedFolderNotFound" xml:space="preserve">
    <value>Specified folder in configuration is not found:</value>
  </data>
  <data name="StandardError" xml:space="preserve">
    <value>Standard Error:</value>
  </data>
  <data name="StandardOutput" xml:space="preserve">
    <value>Standard Output:</value>
  </data>
  <data name="StartingBackup" xml:space="preserve">
    <value>Starting backup</value>
  </data>
  <data name="ToSpace" xml:space="preserve">
    <value>to </value>
  </data>
</root>